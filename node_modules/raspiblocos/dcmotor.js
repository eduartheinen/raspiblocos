var gpio = require('raspiblocos/gpio');

var dcmotor = function dcmotor(ports){

  var usedports = new Array();

  ports.forEach(function(p){
    usedports.push(new gpio(p, 'out'));
  });

  return{

    moveForward: function moveForward(time){
      return usedports[0].turnOn()
      .delay(time)
      .then(() => {usedports[0].turnOff()})
      .then(() => {return 'motor adiante durante ' + time + 'ms'})
      .fail((e) => {return new Error(e)});
    },

    moveBackward: function moveBackward(time){
      return usedports[1].turnOn()
      .delay(time)
      .then(() => {usedports[1].turnOff()})
      .then(() => {return 'motor atrÃ¡s durante ' + time + 'ms'})
      .fail((e) => {return new Error(e)});
      
    },

    /*moveForwardPwm: function moveForwardPwm(value, time){
      return usedports[0].pwm(value)
      .delay(time)
      .then(() => {usedports[0].pwm(0)})
      .then(() => {return 'motor adiante durante ' + time + 'ms'})
      .fail((e) => {return new Error(e)});
      
    },*/

    unexport: function unexport(){
      usedports.forEach(function(p){
        p.unexport();
      });
      return 'unexported'
    }
  }
}

module.exports = dcmotor;