var usonic = require('../r-pi-usonic/lib/usonic.js'),
math = require('../r-pi-usonic/node_modules/math-statistics/lib/statistics.js'),
Q = require('q'),
sensor;

var sensor = function sensor(ports){
  var echo = ports[0],
  trigger = ports[1];

  var initSensor = function (config, callback) {
    var deferred = Q.defer(),
    res,
    sensor = usonic.createSensor(config.echoPin, config.triggerPin, config.timeout);

    console.log('Config: ' + JSON.stringify(config));

    var distances;

    (function measure() {
      if (!distances || distances.length === config.rate) {
        if (distances) {
          res = math.median(distances);
          deferred.resolve(res.toFixed(2));
        }

        distances = [];
      }

      setTimeout(function () {
        distances.push(sensor());

        measure();
      }, config.delay);
    }());

    return deferred.promise;
  };

  return{

    measure: function measure(){
      return initSensor({
        echoPin: echo,
        triggerPin: trigger,
        timeout: 750,
        delay: 50,
        rate: 10
      }).delay(100)
      .then((res) => {return res});
    }
  }
}

module.exports = sensor;